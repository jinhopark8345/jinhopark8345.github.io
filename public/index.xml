<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jinho&#39;s TIL</title>
    <link>https://jinhopark8345.github.io/</link>
    <description>Recent content on Jinho&#39;s TIL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jinhopark8345.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ml-terms</title>
      <link>https://jinhopark8345.github.io/post/ml-terms/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/post/ml-terms/</guid>
      <description>General Latent Space and Latent Vector latent : (of a quality or state) existing but not yet developed or manifest; hidden or concealed. represenations : encoded versions of the original input latent vectors (embeddings, embedding vector) : intermediate representations, embedding vectors are representations where similar items are close to each other. latent space (latent feature space, embedding space) : the space into which embedding vectors are mapped. semantic word has</description>
    </item>
    
    <item>
      <title>Brute-Force Search</title>
      <link>https://jinhopark8345.github.io/post/algorithms/brute-force-search/</link>
      <pubDate>Tue, 04 Jul 2023 22:46:39 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/post/algorithms/brute-force-search/</guid>
      <description>quiz link: https://school.programmers.co.kr/learn/courses/30/lessons/42839
from functools import lru_cache from itertools import permutations import math def solution(numbers): answer = 0 # cache the result of each call of this method @lru_cache(maxsize=100000) def is_prime_num(num): if num &amp;lt; 2: return False # we only need to check the range of [2, mat.sqrt(num)+1 ) max_num = int(math.sqrt(num)) for n in range(2, max_num+1): if num % n == 0 : return False return True # collect all numbers with permutation algorithm all_nums = set() l = len(numbers) for length in range(1, l+1): perm_list = list(permutations(numbers, r=length)) set_nums = set([int(&amp;#39;&amp;#39;.</description>
    </item>
    
    <item>
      <title>BFS-DFS</title>
      <link>https://jinhopark8345.github.io/post/algorithms/bfs-dfs/</link>
      <pubDate>Tue, 04 Jul 2023 01:10:47 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/post/algorithms/bfs-dfs/</guid>
      <description> quiz link : https://school.programmers.co.kr/learn/courses/30/lessons/43165
 BFS : Breadth-First Search DFS : Depth-First Search  # bfs solution to the above quiz def solution(numbers, target): answer = 0 def recur(cur_idx, cur_val): &amp;#34;&amp;#34;&amp;#34; recursion function need 1. return logic 2. recursive calls &amp;#34;&amp;#34;&amp;#34; if cur_idx == len(numbers): # return logic nonlocal answer if cur_val == target: answer += 1 return # recursive calls ## when next number is added recur(cur_idx + 1, cur_val + numbers[cur_idx]) ## when next number is subtracted recur(cur_idx + 1, cur_val - numbers[cur_idx]) # start with idx == 0, current value == 0 recur(0, 0) return answer  </description>
    </item>
    
    <item>
      <title>encoder-decoder-transformers</title>
      <link>https://jinhopark8345.github.io/post/transformers/encoder-decoder-transformers/</link>
      <pubDate>Tue, 04 Jul 2023 00:57:49 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/post/transformers/encoder-decoder-transformers/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>How to setup conda env with Emacs</title>
      <link>https://jinhopark8345.github.io/post/conda-setup/</link>
      <pubDate>Sun, 25 Dec 2022 13:05:21 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/post/conda-setup/</guid>
      <description>How to set up conda python development environment with Emacs  Emacs conda package config  (use-package conda :ensure t :init (setq conda-env-home-directory (expand-file-name &amp;#34;~/miniconda3/&amp;#34;)) (setq conda-env-subdirectory &amp;#34;envs&amp;#34;) ;; if you want interactive shell support, include: (conda-env-initialize-interactive-shells) ;; activate py39, default env (conda-env-activate &amp;#34;py39&amp;#34;) ;; if you want auto-activation (see below for details), include: (conda-env-autoactivate-mode t) (setq-default mode-line-format (cons &amp;#39;(:exec conda-env-current-name) mode-line-format)) )    Set specific conda-env for project   go to project you want to set conda-env M-x projectile-edit-dir-locals type &amp;#34;conda-env-name-for-buffer&amp;#34; type &amp;lt;your-conda-env-name&amp;gt;  After the above commands, you should have below &amp;#34;.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jinhopark8345.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/about/</guid>
      <description>About Me I am a Machine Learning Engineer working on Multi-modal transformers.
Feel free to contact me at Github and Linkedin, leave your thoughts in his blog or share your ideas by writing him an email.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jinhopark8345.github.io/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/notes/</guid>
      <description>Go 语言学习笔记 Envoy 学习笔记</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jinhopark8345.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Posts Archive</title>
      <link>https://jinhopark8345.github.io/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/archive/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
