<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on Jinho&#39;s TIL</title>
    <link>https://jinhopark8345.github.io/docs/algorithms/</link>
    <description>Recent content in Algorithms on Jinho&#39;s TIL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://jinhopark8345.github.io/docs/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Structure</title>
      <link>https://jinhopark8345.github.io/docs/algorithms/data_structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jinhopark8345.github.io/docs/algorithms/data_structure/</guid>
      <description>Introduction   Data structures are a way of organizing and storing data so that it can be accessed and modified efficiently. A lot of the time, the data structures you use will be provided by the language you are using but this doesn&amp;#39;t mean you don&amp;#39;t need to know how they work. Knowing how each data structure works and when to use them is a fundamental skill for any programmer.</description>
    </item>
    
    <item>
      <title>Leetcode</title>
      <link>https://jinhopark8345.github.io/docs/algorithms/leetcode/</link>
      <pubDate>Sun, 22 Oct 2023 01:43:48 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/docs/algorithms/leetcode/</guid>
      <description>Minimum Operations to Make All Array Elements Equal - LeetCode
minimum operations to make all array elements equal  Minimum Operations to Make All Array Elements Equal - LeetCode
 Solution from typing import List from itertools import groupby import bisect class Solution: def minOperations(self, nums: List[int], queries: List[int]) -&amp;gt; List[int]: ans = [] n = len(nums) nums = sorted(nums) cum_sum = [0] so_far = 0 for num in nums: so_far += num cum_sum.</description>
    </item>
    
    <item>
      <title>Data Structure: Stack</title>
      <link>https://jinhopark8345.github.io/docs/algorithms/stack/</link>
      <pubDate>Fri, 07 Jul 2023 20:47:51 +0900</pubDate>
      
      <guid>https://jinhopark8345.github.io/docs/algorithms/stack/</guid>
      <description>Stack   A stack is an ADT that follows the Last-In-First-Out (LIFO) principle. It provides operations like push (to add an item to the top of the stack) and pop (to remove and return the top item).    Stack examples  프로그래머스 스쿨 - 주식가격  solution   brute-force solution  Stack solution    brute-force solution   Time Complexity : O(N^2) -&amp;gt; two for loops Memory Complexity : O(N) -&amp;gt; additional list answer  def solution(prices): answer = [] for cur_idx, cur_price in enumerate(prices): # every price start with 0 time answer.</description>
    </item>
    
  </channel>
</rss>
